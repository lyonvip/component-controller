apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
    meta.helm.sh/release-name: base-builder
    meta.helm.sh/release-namespace: component
  creationTimestamp: "2024-03-27T15:51:39Z"
  generation: 6
  labels:
    app.kubernetes.io/managed-by: Helm
  name: rabbitmq-server
  namespace: component
  resourceVersion: "8167"
  uid: 82520300-d255-411d-8733-b0d1f208418f
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rabbitmq
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - env:
        - name: RABBITMQ_DEFAULT_USER
          valueFrom:
            secretKeyRef:
              key: rabbitmq-user
              name: rabbitmq-credentials
        - name: RABBITMQ_DEFAULT_PASS
          valueFrom:
            secretKeyRef:
              key: rabbitmq-password
              name: rabbitmq-credentials
        image: harbor.lclouds.info:3443/library/rabbitmq:3.11.10
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5672
          timeoutSeconds: 5
        name: rabbitmq-server
        ports:
        - containerPort: 5672
          name: rabbitmq
          protocol: TCP
        - containerPort: 15672
          name: rabbitmq-mgmt
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 5672
          timeoutSeconds: 5
        resources:
          limits:
            cpu: "1"
            memory: 1Gi
          requests:
            cpu: "1"
            memory: 1Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /var/lib/rabbitmq
          name: rabbitmq-data
        - mountPath: /etc/rabbitmq
          name: rabbitmq-config
      dnsPolicy: ClusterFirst
      nodeSelector:
        app: component
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /data/server/rabbitmq-server
          type: DirectoryOrCreate
        name: rabbitmq-data
      - configMap:
          defaultMode: 420
          name: rabbitmq-config
        name: rabbitmq-config
status:
  availableReplicas: 1
  conditions:
  - lastTransitionTime: "2024-03-27T15:51:39Z"
    lastUpdateTime: "2024-03-27T16:12:44Z"
    message: ReplicaSet "rabbitmq-server-6db7df568b" has successfully progressed.
    reason: NewReplicaSetAvailable
    status: "True"
    type: Progressing
  - lastTransitionTime: "2024-03-27T16:13:56Z"
    lastUpdateTime: "2024-03-27T16:13:56Z"
    message: Deployment has minimum availability.
    reason: MinimumReplicasAvailable
    status: "True"
    type: Available
  observedGeneration: 6
  readyReplicas: 1
  replicas: 1
  updatedReplicas: 1
